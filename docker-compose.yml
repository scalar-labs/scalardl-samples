version: "3"
services:
  cassandra:
    image: cassandra:3.11
    volumes:
      - cassandra-data:/var/lib/cassandra
      - ./create_schema.cql:/create_schema.cql
    # ports:
    #   - "7199:7199" # JMX
    #   - "7000:7000" # cluster communication
    #   - "7001:7001" # cluster communication (SSL)
    #   - "9042:9042" # native protocol clients
    #   - "9160:9160" # thrift clients

  scalar-ledger:
    image: scalarlabs/scalar-ledger:1.2.0
    depends_on:
      - cassandra
    environment:
      - SCALAR_CASSANDRA_HOST=cassandra
    networks:
      default:
        aliases:
          - scalar-ledger

  envoy:
    image: envoyproxy/envoy:v1.10.0
    ports:
      - "50051:50051"
      - "50052:50052"
    volumes:
      - ./envoy.yaml:/etc/envoy/envoy.yaml
    depends_on:
      - scalar-ledger
    command: /usr/local/bin/envoy -c /etc/envoy/envoy.yaml -l trace

  cfssl-init:
    # This service should be run separately before two services below
    # (cfssl-serve and cfssl-ocspserve) with `depends_on` option, because if
    # they start up at the same time (by commands like `docker-compose up`),
    # they both attempt to generate the same missing certificate files, which
    # results in a race condition.
    image: scalar-samples-cfssl
    build: ./cfssl
    volumes:
      - ./cfssl/data:/cfssl/data
    command: /bin/true

  cfssl-serve:
    image: scalar-samples-cfssl
    build: ./cfssl
    volumes:
      - ./cfssl/data:/cfssl/data
    depends_on:
      - cfssl-init
    command: serve
    ports:
      - "8888:8888"

  cfssl-ocspserve:
    image: scalar-samples-cfssl
    build: ./cfssl
    volumes:
      - ./cfssl/data:/cfssl/data
    depends_on:
      - cfssl-init
    command: ocspserve
    ports:
      - "8889:8889"

volumes:
  cassandra-data:
