services:
  ledger-envoy:
    image: ghcr.io/scalar-labs/scalar-envoy:1.5.0
    container_name: "scalardl-samples-ledger-envoy-1"
    ports:
      - "9901:9901"
      - "50051:50051"
      - "50052:50052"
    depends_on:
      scalar-ledger:
        condition: service_started
    environment:
      - admin_access_log_path=/dev/stdout
      - scalardl_address=scalar-ledger
      - service_listeners=scalar-service:50051,scalar-privileged:50052
      - envoy_tls=false
    networks:
      - scalar-network

  cfssl-init:
    # This service should be run separately before two services below
    # (cfssl-serve and cfssl-ocspserve) with `depends_on` option, because if
    # they start up at the same time (by commands like `docker-compose up`),
    # they both attempt to generate the same missing certificate files, which
    # results in a race condition.
    image: ghcr.io/scalar-labs/scalar-cfssl:1.0.0
    container_name: "scalardl-samples-cfssl-init-1"
    volumes:
      - ./cfssl/data:/cfssl/data
    command: /bin/true
    networks:
      - scalar-network

  cfssl-serve:
    image: ghcr.io/scalar-labs/scalar-cfssl:1.0.0
    container_name: "scalardl-samples-cfssl-serve-1"
    volumes:
      - ./cfssl/data:/cfssl/data
    depends_on:
      - cfssl-init
    command: serve
    ports:
      - "8888:8888"
    networks:
      - scalar-network

  cfssl-ocspserve:
    image: ghcr.io/scalar-labs/scalar-cfssl:1.0.0
    container_name: "scalardl-samples-cfssl-ocspserve-1"
    volumes:
      - ./cfssl/data:/cfssl/data
    depends_on:
      - cfssl-init
    command: ocspserve
    ports:
      - "8889:8889"
    networks:
      - scalar-network

networks:
  scalar-network:
    name: scalar-network
