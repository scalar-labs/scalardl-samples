version: "3.5"
services:
  scalardl-auditor-schema-loader-cassandra:
    image: ghcr.io/scalar-labs/scalardl-schema-loader:3.9.2
    environment:
      - SCHEMA_TYPE=auditor
    volumes:
      - ./scalardb.properties:/scalardb.properties
    depends_on:
      cassandra:
        condition: service_healthy
    command:
      - "-c"
      - "/scalardb.properties"
      - "--coordinator"
      - "--replication-factor"
      - "1"
    networks:
      - scalar-network
    restart: on-failure

  scalar-ledger-as-client:
    image: ghcr.io/scalar-labs/scalar-client:3.9.2
    container_name: "scalardl-samples-scalar-ledger-as-client-1"
    volumes:
      - ./fixture/ledger.pem:/scalar/ledger.pem
      - ./fixture/ledger-key.pem:/scalar/ledger-key.pem
    depends_on:
      scalar-ledger:
        condition: service_healthy
      scalar-auditor:
        condition: service_healthy
    environment:
      - SCALAR_DL_CLIENT_SERVER_HOST=ledger-envoy
      - SCALAR_DL_CLIENT_AUDITOR_HOST=auditor-envoy
      - SCALAR_DL_CLIENT_AUDITOR_ENABLED=true
      - SCALAR_DL_CLIENT_CERT_HOLDER_ID=ledger
      - SCALAR_DL_CLIENT_CERT_PATH=/scalar/ledger.pem
      - SCALAR_DL_CLIENT_PRIVATE_KEY_PATH=/scalar/ledger-key.pem
    networks:
      - scalar-network
    command: |
      dockerize -template client.properties.tmpl:client.properties
      -template log4j2.properties.tmpl:log4j2.properties
      ./client/bin/register-cert --config client.properties
    restart: on-failure:5

  scalar-audior-as-client:
    image: ghcr.io/scalar-labs/scalar-client:3.9.2
    container_name: "scalardl-samples-scalar-auditor-as-client-1"
    volumes:
      - ./fixture/auditor.pem:/scalar/auditor.pem
      - ./fixture/auditor-key.pem:/scalar/auditor-key.pem
    depends_on:
      scalar-ledger:
        condition: service_healthy
      scalar-auditor:
        condition: service_healthy
    environment:
      - SCALAR_DL_CLIENT_SERVER_HOST=ledger-envoy
      - SCALAR_DL_CLIENT_AUDITOR_HOST=auditor-envoy
      - SCALAR_DL_CLIENT_AUDITOR_ENABLED=true
      - SCALAR_DL_CLIENT_CERT_HOLDER_ID=auditor
      - SCALAR_DL_CLIENT_CERT_PATH=/scalar/auditor.pem
      - SCALAR_DL_CLIENT_PRIVATE_KEY_PATH=/scalar/auditor-key.pem
    networks:
      - scalar-network
    command: |
      dockerize -template client.properties.tmpl:client.properties
      -template log4j2.properties.tmpl:log4j2.properties
      ./client/bin/register-cert --config client.properties
    restart: on-failure:5

  scalar-ledger:
    environment:
      - SCALAR_DL_LEDGER_AUDITOR_ENABLED=true

  scalar-auditor:
    image: ghcr.io/scalar-labs/scalardl-auditor-byol:3.9.2
    container_name: "scalardl-samples-scalar-auditor-1"
    volumes:
      - ./fixture/auditor.pem:/scalar/auditor.pem
      - ./fixture/auditor-key.pem:/scalar/auditor-key.pem
      - ./fixture/auditor.properties.tmpl:/scalar/auditor/auditor.properties.tmpl
      - ./fixture/trial-license-cert.pem:/scalar/license-cert.pem
      # If you have a commercial license key, you must use `commercial-license-cert.pem` instead of `trial-license-cert.pem`.
      # - ./fixture/commercial-license-cert.pem:/scalar/license-cert.pem
    depends_on:
      scalardl-auditor-schema-loader-cassandra:
        condition: service_completed_successfully
    environment:
      - SCALAR_DB_CONTACT_POINTS=cassandra
      - SCALAR_DB_STORAGE=cassandra
      - SCALAR_DL_AUDITOR_LEDGER_HOST=ledger-envoy
      - SCALAR_DL_AUDITOR_CERT_PATH=/scalar/auditor.pem
      - SCALAR_DL_AUDITOR_PRIVATE_KEY_PATH=/scalar/auditor-key.pem

      ##### PLEASE REPLACE THIS VALUE WITH YOUR LICENSE KEY #####
      - SCALAR_DL_LICENSING_LICENSE_KEY=<SET_YOUR_LICENSE_KEY>
      ##### PLEASE REPLACE THIS VALUE WITH YOUR LICENSE KEY #####

    networks:
      - scalar-network
    healthcheck:
      test: ["CMD-SHELL", "grpc_health_probe -addr=localhost:40051 && grpc_health_probe -addr=auditor-envoy:40051 || exit 1"]
      interval: 1s
      timeout: 10s
      retries: 60
      start_period: 10s

  auditor-envoy:
    image: ghcr.io/scalar-labs/scalar-envoy:1.5.0
    container_name: "scalardl-samples-auditor-envoy-1"
    ports:
      - "9902:9901"
      - "40051:40051"
      - "40052:40052"
    depends_on:
      scalar-auditor:
        condition: service_started
    environment:
      - admin_access_log_path=/dev/stdout
      - scalardl_address=scalar-auditor
      - service_listeners=scalar-service:40051,scalar-privileged:40052
      - envoy_tls=false
    networks:
      - scalar-network
